Team: Stefan Bossbaly, Gerald Brennan

Compiling:
The project uses ANT as a makefile. Please ensure that the latest 
version of ANT is installed on your system. The following targets
are available:
clean: Cleans up any files that were made during the build process
compile: Compiles all the .java into .class files
jar: Takes the .class files and archives them into an executable .jar
run: Runs the .jar file

Running:
You can use the "ant run" command to run the Java project or use the
"java -jar dist/cs520-asssigment2.jar" command from the project directory
to launch the processor simulator command line interface. Here is a list
of commands and their parameters.

Initialize <file_path>: Initializes the processor and loads the instrutions
in the file into the program memory. "Initialize programs\test1.txt" would
be a valid initialization command.

Simulate <cycles>: Runs the simulation for the specified amount of clock
cycles. If a HALT instruction is encountered, the processor stops simulation
and a message is outputted to let the user know that a HALT instruction was
processed.

Display: Displays the current state of the process by outputting to the
console contents of each stage in the pipeline, all registers (including X) 
and the contents of the first 100 memory locations containing data, 
starting with address 0.

All other commands in the project description are supported as outlined.

Log:
The .git directory is included with the project. Use the git log command
to traverse the commit log. Each entry has a description and which team
member was involved in the code change. Gerald was responsible for documenting
the project and the design paper. Here is a meeting log as well:
02 Dec -> 1 hour
03 Dec -> 3 hours
06 Dec -> 2 hours
09 Dec -> 4 hours
10 Dec -> 2.5 hours
11 Dec -> 3 hours